<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>斜阳</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://miaoxinwei.github.io/"/>
  <updated>2017-04-25T08:54:26.000Z</updated>
  <id>https://miaoxinwei.github.io/</id>
  
  <author>
    <name>LICO</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring 集成 httpclient</title>
    <link href="https://miaoxinwei.github.io/2017/04/25/spring-%E9%9B%86%E6%88%90-httpclient/"/>
    <id>https://miaoxinwei.github.io/2017/04/25/spring-集成-httpclient/</id>
    <published>2017-04-25T08:31:33.000Z</published>
    <updated>2017-04-25T08:54:26.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>httpclient 介绍</p>
<blockquote>
<p>The Hyper-Text Transfer Protocol (HTTP) is perhaps the most significant protocol used on the Internet today. Web services, network-enabled appliances and the growth of network computing continue to expand the role of the HTTP protocol beyond user-driven web browsers, while increasing the number of applications that require HTTP support.<br>Although the java.net package provides basic functionality for accessing resources via HTTP, it doesn’t provide the full flexibility or functionality needed by many applications. HttpClient seeks to fill this void by providing an efficient, up-to-date, and feature-rich package implementing the client side of the most recent HTTP standards and recommendations.<br>Designed for extension while providing robust support for the base HTTP protocol, HttpClient may be of interest to anyone building HTTP-aware client applications such as web browsers, web service clients, or systems that leverage or extend the HTTP protocol for distributed communication.</p>
</blockquote>
<a id="more"></a>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>在pom.xml文件中增加以下依赖<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></div><div class="line">		<span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">		<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></div><div class="line">	<span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="书写配置类"><a href="#书写配置类" class="headerlink" title="书写配置类"></a>书写配置类</h4><blockquote>
<p>用@Configuration注解该类，等价与XML中配置beans；用@Bean标注方法等价于XML中配置bean。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpConfiguration</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> LayeredConnectionSocketFactory <span class="title">sslSF</span><span class="params">()</span> </span>&#123;</div><div class="line">        LayeredConnectionSocketFactory sslSF = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType());</div><div class="line">            <span class="comment">//信任任何链接</span></div><div class="line">            SSLContext sslContext = SSLContexts.custom().loadTrustMaterial(trustStore, <span class="keyword">new</span> TrustStrategy() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</div><div class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;).build();</div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext, NoopHostnameVerifier.INSTANCE);</div><div class="line">        &#125; <span class="keyword">catch</span> (KeyStoreException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (KeyManagementException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> sslSF;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Registry&lt;ConnectionSocketFactory&gt; <span class="title">registryBuilder</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> RegistryBuilder.&lt;ConnectionSocketFactory&gt;create()</div><div class="line">                .register(<span class="string">"https"</span>, sslSF())</div><div class="line">                .register(<span class="string">"http"</span>, <span class="keyword">new</span> PlainConnectionSocketFactory())</div><div class="line">                .build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> PoolingHttpClientConnectionManager <span class="title">connectionManager</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        PoolingHttpClientConnectionManager connectionManager = <span class="keyword">new</span> PoolingHttpClientConnectionManager(registryBuilder());</div><div class="line">        connectionManager.setMaxTotal(<span class="number">500</span>);</div><div class="line">        connectionManager.setDefaultMaxPerRoute(<span class="number">500</span>);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> connectionManager;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> CloseableHttpClient <span class="title">httpClient</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> HttpClients.custom()</div><div class="line">                .setConnectionManager(connectionManager())</div><div class="line">                .build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> RequestConfig <span class="title">requestConfig</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> RequestConfig.custom()</div><div class="line">                .setConnectTimeout(<span class="number">10000</span>)</div><div class="line">                .setConnectionRequestTimeout(<span class="number">500</span>)</div><div class="line">                .setSocketTimeout(<span class="number">10000</span>)</div><div class="line">                .build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span>(destroyMethod = <span class="string">"shutdown"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> IdleConnectionEvictor <span class="title">idleConnectionEvictor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> IdleConnectionEvictor(connectionManager());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="定期清理无效的http连接"><a href="#定期清理无效的http连接" class="headerlink" title="定期清理无效的http连接"></a>定期清理无效的http连接</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IdleConnectionEvictor</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> HttpClientConnectionManager connMgr;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">boolean</span> shutdown;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">IdleConnectionEvictor</span><span class="params">(HttpClientConnectionManager connMgr)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        <span class="keyword">this</span>.connMgr = connMgr;</div><div class="line">        <span class="comment">// 启动当前线程</span></div><div class="line">        <span class="keyword">this</span>.start();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">while</span> (!shutdown) &#123;</div><div class="line">                <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">                    wait(<span class="number">5000</span>);</div><div class="line">                    <span class="comment">// 关闭失效的连接</span></div><div class="line">                    connMgr.closeExpiredConnections();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</div><div class="line">            <span class="comment">// 结束</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">shutdown</span><span class="params">()</span> </span>&#123;</div><div class="line">        shutdown = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">synchronized</span> (<span class="keyword">this</span>) &#123;</div><div class="line">            notifyAll();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpClientUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(HttpClientUtil.class);</div><div class="line"></div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> CloseableHttpClient httpClient;</div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> RequestConfig requestConfig;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * get</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url     请求的url</div><div class="line">     * <span class="doctag">@param</span> queries 请求的参数，在浏览器？后面的数据，没有可以传null</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, String&gt; queries)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line">        <span class="comment">//支持https</span></div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(url);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (queries != <span class="keyword">null</span> &amp;&amp; queries.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">boolean</span> firstFlag = <span class="keyword">true</span>;</div><div class="line">            Iterator iterator = queries.entrySet().iterator();</div><div class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</div><div class="line">                Map.Entry entry = (Map.Entry&lt;String, String&gt;) iterator.next();</div><div class="line">                <span class="keyword">if</span> (firstFlag) &#123;</div><div class="line">                    sb.append(<span class="string">"?"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                    firstFlag = <span class="keyword">false</span>;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    sb.append(<span class="string">"&amp;"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(sb.toString());</div><div class="line">        <span class="comment">//设置超时</span></div><div class="line">        httpGet.setConfig(<span class="keyword">this</span>.requestConfig);</div><div class="line">        <span class="comment">//请求数据</span></div><div class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = <span class="keyword">this</span>.httpClient.execute(httpGet);</div><div class="line">            <span class="keyword">int</span> status = response.getStatusLine().getStatusCode();</div><div class="line">            <span class="keyword">if</span> (status == HttpStatus.SC_OK) &#123;</div><div class="line">                HttpEntity entity = response.getEntity();</div><div class="line">                responseBody = EntityUtils.toString(entity);</div><div class="line"><span class="comment">//                EntityUtils.consume(response.getEntity()); //会自动释放连接</span></div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            logger.error(<span class="string">"http error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(ex));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    response.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                    logger.error(<span class="string">"http close error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * get</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url     请求的url</div><div class="line">     * <span class="doctag">@param</span> queries 请求的参数，在浏览器？后面的数据，没有可以传null</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> File <span class="title">getFile</span><span class="params">(String url, Map&lt;String, String&gt; queries, File file)</span> </span>&#123;</div><div class="line">        <span class="comment">//支持https</span></div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(url);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (queries != <span class="keyword">null</span> &amp;&amp; queries.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">boolean</span> firstFlag = <span class="keyword">true</span>;</div><div class="line">            Iterator iterator = queries.entrySet().iterator();</div><div class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</div><div class="line">                Map.Entry entry = (Map.Entry&lt;String, String&gt;) iterator.next();</div><div class="line">                <span class="keyword">if</span> (firstFlag) &#123;</div><div class="line">                    sb.append(<span class="string">"?"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                    firstFlag = <span class="keyword">false</span>;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    sb.append(<span class="string">"&amp;"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        HttpGet httpGet = <span class="keyword">new</span> HttpGet(sb.toString());</div><div class="line">        <span class="comment">//设置超时</span></div><div class="line">        httpGet.setConfig(<span class="keyword">this</span>.requestConfig);</div><div class="line">        <span class="comment">//请求数据</span></div><div class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = <span class="keyword">this</span>.httpClient.execute(httpGet);</div><div class="line">            <span class="keyword">int</span> status = response.getStatusLine().getStatusCode();</div><div class="line">            <span class="keyword">if</span> (status == HttpStatus.SC_OK) &#123;</div><div class="line">                HttpEntity entity = response.getEntity();</div><div class="line"></div><div class="line">                BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(entity.getContent());</div><div class="line">                <span class="keyword">if</span> (bis.available() &lt; <span class="number">1024</span>) &#123;</div><div class="line">                    bis.close();</div><div class="line"></div><div class="line">                    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(file);</div><div class="line">                <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">                <span class="keyword">int</span> size = <span class="number">0</span>;</div><div class="line">                <span class="keyword">while</span> ((size = bis.read(buf)) != -<span class="number">1</span>) &#123;</div><div class="line">                    fos.write(buf, <span class="number">0</span>, size);</div><div class="line">                &#125;</div><div class="line">                fos.close();</div><div class="line">                bis.close();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            logger.error(<span class="string">"http error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(ex));</div><div class="line"></div><div class="line">            file.delete();</div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    response.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                    logger.error(<span class="string">"http close error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> file;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * post</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url     请求的url</div><div class="line">     * <span class="doctag">@param</span> queries 请求的参数，在浏览器？后面的数据，没有可以传null</div><div class="line">     * <span class="doctag">@param</span> params  post form 提交的参数</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, String&gt; queries, Map&lt;String, String&gt; params)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(url);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (queries != <span class="keyword">null</span> &amp;&amp; queries.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">boolean</span> firstFlag = <span class="keyword">true</span>;</div><div class="line">            Iterator iterator = queries.entrySet().iterator();</div><div class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</div><div class="line">                Map.Entry&lt;String, String&gt; entry = (Map.Entry&lt;String, String&gt;) iterator.next();</div><div class="line">                <span class="keyword">if</span> (firstFlag) &#123;</div><div class="line">                    sb.append(<span class="string">"?"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                    firstFlag = <span class="keyword">false</span>;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    sb.append(<span class="string">"&amp;"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//指定url,和http方式</span></div><div class="line">        HttpPost httpPost = <span class="keyword">new</span> HttpPost(sb.toString());</div><div class="line">        httpPost.setConfig(<span class="keyword">this</span>.requestConfig);</div><div class="line">        <span class="comment">//添加参数</span></div><div class="line">        List&lt;NameValuePair&gt; nvps = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</div><div class="line">                nvps.add(<span class="keyword">new</span> BasicNameValuePair(key, params.get(key)));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        httpPost.setEntity(<span class="keyword">new</span> UrlEncodedFormEntity(nvps, Consts.UTF_8));</div><div class="line">        <span class="comment">//请求数据</span></div><div class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = <span class="keyword">this</span>.httpClient.execute(httpPost);</div><div class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</div><div class="line">                HttpEntity entity = response.getEntity();</div><div class="line">                responseBody = EntityUtils.toString(entity);</div><div class="line"><span class="comment">//                EntityUtils.consume(response.getEntity()); //会自动释放连接</span></div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</div><div class="line">            logger.error(<span class="string">"http error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(ex));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    response.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                    logger.error(<span class="string">"http close error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * post</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url  请求的url</div><div class="line">     * <span class="doctag">@param</span> data post json 提交的参数</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(String url, String data)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(url);</div><div class="line"></div><div class="line">        <span class="comment">//指定url,和http方式</span></div><div class="line">        HttpPost httpPost = <span class="keyword">new</span> HttpPost(sb.toString());</div><div class="line">        httpPost.setConfig(<span class="keyword">this</span>.requestConfig);</div><div class="line">        <span class="comment">//设置类型</span></div><div class="line">        StringEntity se = <span class="keyword">new</span> StringEntity(data, <span class="string">"utf-8"</span>);</div><div class="line">        se.setContentEncoding(<span class="keyword">new</span> BasicHeader(HTTP.CONTENT_TYPE, <span class="string">"application/json"</span>));</div><div class="line">        httpPost.setEntity(se);</div><div class="line">        <span class="comment">//请求数据</span></div><div class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = <span class="keyword">this</span>.httpClient.execute(httpPost);</div><div class="line">            <span class="keyword">if</span> (response.getStatusLine().getStatusCode() == HttpStatus.SC_OK) &#123;</div><div class="line">                HttpEntity entity = response.getEntity();</div><div class="line">                responseBody = EntityUtils.toString(entity);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</div><div class="line">            logger.error(<span class="string">"http post error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(ex));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    response.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                    logger.error(<span class="string">"http post close error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Resource</span></div><div class="line"><span class="keyword">private</span> HttpClientUtil httpClientUtil;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;httpclient 介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Hyper-Text Transfer Protocol (HTTP) is perhaps the most significant protocol used on the Internet today. Web services, network-enabled appliances and the growth of network computing continue to expand the role of the HTTP protocol beyond user-driven web browsers, while increasing the number of applications that require HTTP support.&lt;br&gt;Although the java.net package provides basic functionality for accessing resources via HTTP, it doesn’t provide the full flexibility or functionality needed by many applications. HttpClient seeks to fill this void by providing an efficient, up-to-date, and feature-rich package implementing the client side of the most recent HTTP standards and recommendations.&lt;br&gt;Designed for extension while providing robust support for the base HTTP protocol, HttpClient may be of interest to anyone building HTTP-aware client applications such as web browsers, web service clients, or systems that leverage or extend the HTTP protocol for distributed communication.&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="https://miaoxinwei.github.io/categories/JAVA/"/>
    
    
      <category term="Spring" scheme="https://miaoxinwei.github.io/tags/Spring/"/>
    
      <category term="httpclient" scheme="https://miaoxinwei.github.io/tags/httpclient/"/>
    
  </entry>
  
  <entry>
    <title>不同版本(2.5-3.1) web.xml文件的schema头部声明</title>
    <link href="https://miaoxinwei.github.io/2017/04/25/%E4%B8%8D%E5%90%8C%E7%89%88%E6%9C%AC-2-5-3-1-web-xml%E6%96%87%E4%BB%B6%E7%9A%84schema%E5%A4%B4%E9%83%A8%E5%A3%B0%E6%98%8E/"/>
    <id>https://miaoxinwei.github.io/2017/04/25/不同版本-2-5-3-1-web-xml文件的schema头部声明/</id>
    <published>2017-04-25T07:01:05.000Z</published>
    <updated>2017-04-25T07:12:45.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>项目用的容器是tomcat8, tomcat8 默认的是servlet 3.1的版本, 看了下 web.xml还是3.0的版本, 所以升级了下,  顺便贴一下2.5到3.1的schema头部声明。</strong></p>
</blockquote>
<a id="more"></a>
<h5 id="1-Servlet-3-1"><a href="#1-Servlet-3-1" class="headerlink" title="1. Servlet 3.1"></a>1. Servlet 3.1</h5><p>Java EE 7 XML schema，命名空间是 <em><a href="http://xmlns.jcp.org/xml/ns/javaee/" target="_blank" rel="external">http://xmlns.jcp.org/xml/ns/javaee/</a></em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span>   </span></div><div class="line">        <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>  </div><div class="line">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee  </span></div><div class="line">         http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"  </div><div class="line">        <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="2-Servlet-3-0"><a href="#2-Servlet-3-0" class="headerlink" title="2. Servlet 3.0"></a>2. Servlet 3.0</h5><p>Java EE 6 XML schema，命名空间是 <em><a href="http://java.sun.com/xml/ns/javaee" target="_blank" rel="external">http://java.sun.com/xml/ns/javaee</a></em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span>  </span></div><div class="line">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>  </div><div class="line">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee  </span></div><div class="line">          http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"  </div><div class="line">          <span class="attr">version</span>=<span class="string">"3.0"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
<h5 id="3-Servlet-2-5"><a href="#3-Servlet-2-5" class="headerlink" title="3. Servlet 2.5"></a>3. Servlet 2.5</h5><p>Java EE 5 XML schema，命名空间是 <em><a href="http://java.sun.com/xml/ns/javaee" target="_blank" rel="external">http://java.sun.com/xml/ns/javaee</a></em></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;  </div><div class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span>  </span></div><div class="line">          <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span>  </div><div class="line">          <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee  </span></div><div class="line">          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"  </div><div class="line">          <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;项目用的容器是tomcat8, tomcat8 默认的是servlet 3.1的版本, 看了下 web.xml还是3.0的版本, 所以升级了下,  顺便贴一下2.5到3.1的schema头部声明。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="https://miaoxinwei.github.io/categories/JAVA/"/>
    
    
      <category term="Spring" scheme="https://miaoxinwei.github.io/tags/Spring/"/>
    
      <category term="web.xml" scheme="https://miaoxinwei.github.io/tags/web-xml/"/>
    
      <category term="servlet" scheme="https://miaoxinwei.github.io/tags/servlet/"/>
    
  </entry>
  
  <entry>
    <title>spring 集成 okhttp3</title>
    <link href="https://miaoxinwei.github.io/2017/04/21/spring-%E9%9B%86%E6%88%90-okhttp3/"/>
    <id>https://miaoxinwei.github.io/2017/04/21/spring-集成-okhttp3/</id>
    <published>2017-04-21T09:13:26.000Z</published>
    <updated>2017-04-25T08:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>okhttp 介绍</p>
<blockquote>
<p>HTTP is the way modern applications network. It’s how we exchange data &amp; media. &gt;Doing HTTP efficiently makes your stuff load faster and saves bandwidth.</p>
<p>OkHttp is an HTTP client that’s efficient by default:</p>
<ul>
<li>HTTP/2 support allows all requests to the same host to share a socket.</li>
<li>Connection pooling reduces request latency (if HTTP/2 isn’t available).</li>
<li>Transparent GZIP shrinks download sizes.</li>
<li>Response caching avoids the network completely for repeat requests.</li>
</ul>
<p>OkHttp perseveres when the network is troublesome: it will silently recover from &gt; &gt;common connection problems. If your service has multiple IP addresses OkHttp will &gt;attempt alternate addresses if the first connect fails. This is necessary for IPv4+IPv6 &gt;and for services hosted in redundant data centers. OkHttp initiates new connections &gt;with modern TLS features (SNI, ALPN), and falls back to TLS 1.0 if the handshake fails.</p>
<p>Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It supports both synchronous blocking calls and async calls with callbacks.</p>
<p>OkHttp supports Android 2.3 and above. For Java, the minimum requirement is 1.7.    —摘自 <a href="https://square.github.io/okhttp/" target="_blank" rel="external">https://square.github.io/okhttp/</a> </p>
</blockquote>
<a id="more"></a>
<h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>在pom.xml文件中增加以下依赖<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>okhttp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.6.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h4 id="书写配置类"><a href="#书写配置类" class="headerlink" title="书写配置类"></a>书写配置类</h4><blockquote>
<p>用@Configuration注解该类，等价与XML中配置beans；用@Bean标注方法等价于XML中配置bean。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OkHttpConfiguration</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> X509TrustManager <span class="title">x509TrustManager</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> X509TrustManager() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkClientTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">checkServerTrusted</span><span class="params">(X509Certificate[] x509Certificates, String s)</span> <span class="keyword">throws</span> CertificateException </span>&#123;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() &#123;</div><div class="line">                <span class="keyword">return</span> <span class="keyword">new</span> X509Certificate[<span class="number">0</span>];</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> SSLSocketFactory <span class="title">sslSocketFactory</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//信任任何链接</span></div><div class="line">            SSLContext sslContext = SSLContext.getInstance(<span class="string">"TLS"</span>);</div><div class="line">            sslContext.init(<span class="keyword">null</span>, <span class="keyword">new</span> TrustManager[]&#123;x509TrustManager()&#125;, <span class="keyword">new</span> SecureRandom());</div><div class="line"></div><div class="line">            <span class="keyword">return</span> sslContext.getSocketFactory();</div><div class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (KeyManagementException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Create a new connection pool with tuning parameters appropriate for a single-user application.</div><div class="line">     * The tuning parameters in this pool are subject to change in future OkHttp releases. Currently</div><div class="line">     */</div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> ConnectionPool <span class="title">pool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ConnectionPool(<span class="number">200</span>, <span class="number">5</span>, TimeUnit.MINUTES);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> OkHttpClient <span class="title">okHttpClient</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OkHttpClient.Builder()</div><div class="line">                .sslSocketFactory(sslSocketFactory(), x509TrustManager())</div><div class="line">                .retryOnConnectionFailure(<span class="keyword">false</span>)<span class="comment">//是否开启缓存</span></div><div class="line">                .connectionPool(pool())<span class="comment">//连接池</span></div><div class="line">                .connectTimeout(<span class="number">10L</span>, TimeUnit.SECONDS)</div><div class="line">                .readTimeout(<span class="number">10L</span>, TimeUnit.SECONDS)</div><div class="line">                .build();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h4><blockquote>
<p>自己写的工具类，比较简单，不是REST风格</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OkHttpUtil</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(OkHttpUtil.class);</div><div class="line"></div><div class="line">    <span class="meta">@Resource</span></div><div class="line">    <span class="keyword">private</span> OkHttpClient okHttpClient;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * get</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url     请求的url</div><div class="line">     * <span class="doctag">@param</span> queries 请求的参数，在浏览器？后面的数据，没有可以传null</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">get</span><span class="params">(String url, Map&lt;String, String&gt; queries)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line"></div><div class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer(url);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (queries != <span class="keyword">null</span> &amp;&amp; queries.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">boolean</span> firstFlag = <span class="keyword">true</span>;</div><div class="line">            Iterator iterator = queries.entrySet().iterator();</div><div class="line">            <span class="keyword">while</span> (iterator.hasNext()) &#123;</div><div class="line">                Map.Entry entry = (Map.Entry&lt;String, String&gt;) iterator.next();</div><div class="line">                <span class="keyword">if</span> (firstFlag) &#123;</div><div class="line">                    sb.append(<span class="string">"?"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                    firstFlag = <span class="keyword">false</span>;</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    sb.append(<span class="string">"&amp;"</span> + entry.getKey() + <span class="string">"="</span> + entry.getValue());</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Request request = <span class="keyword">new</span> Request</div><div class="line">                .Builder()</div><div class="line">                .url(sb.toString())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        Response response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = okHttpClient.newCall(request).execute();</div><div class="line">            <span class="keyword">int</span> status = response.code();</div><div class="line">            <span class="keyword">if</span> (status == <span class="number">200</span>) &#123;</div><div class="line">                <span class="keyword">return</span> response.body().string();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"okhttp put error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                response.close();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * post</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url    请求的url</div><div class="line">     * <span class="doctag">@param</span> params post form 提交的参数</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(String url, Map&lt;String, String&gt; params)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line"></div><div class="line">        FormBody.Builder builder = <span class="keyword">new</span> FormBody.Builder();</div><div class="line"></div><div class="line">        <span class="comment">//添加参数</span></div><div class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</div><div class="line">                builder.add(key, params.get(key));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        Request request = <span class="keyword">new</span> Request</div><div class="line">                .Builder()</div><div class="line">                .url(url)</div><div class="line">                .post(builder.build())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        Response response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = okHttpClient.newCall(request).execute();</div><div class="line">            <span class="keyword">int</span> status = response.code();</div><div class="line">            <span class="keyword">if</span> (status == <span class="number">200</span>) &#123;</div><div class="line">                <span class="keyword">return</span> response.body().string();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"okhttp post error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                response.close();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * post 上传文件</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> url</div><div class="line">     * <span class="doctag">@param</span> params</div><div class="line">     * <span class="doctag">@param</span> fileType</div><div class="line">     * <span class="doctag">@return</span></div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">postFile</span><span class="params">(String url, Map&lt;String, Object&gt; params, String fileType)</span> </span>&#123;</div><div class="line">        String responseBody = <span class="string">""</span>;</div><div class="line"></div><div class="line">        MultipartBody.Builder builder = <span class="keyword">new</span> MultipartBody.Builder();</div><div class="line"></div><div class="line">        <span class="comment">//添加参数</span></div><div class="line">        <span class="keyword">if</span> (params != <span class="keyword">null</span> &amp;&amp; params.keySet().size() &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">for</span> (String key : params.keySet()) &#123;</div><div class="line">                <span class="keyword">if</span> (params.get(key) <span class="keyword">instanceof</span> File) &#123;</div><div class="line">                    File file = (File) params.get(key);</div><div class="line">                    builder.addFormDataPart(key, file.getName(), RequestBody.create(MediaType.parse(fileType), file));</div><div class="line">                    <span class="keyword">continue</span>;</div><div class="line">                &#125;</div><div class="line">                builder.addFormDataPart(key, params.get(key).toString());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        Request request = <span class="keyword">new</span> Request</div><div class="line">                .Builder()</div><div class="line">                .url(url)</div><div class="line">                .post(builder.build())</div><div class="line">                .build();</div><div class="line"></div><div class="line">        Response response = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            response = okHttpClient.newCall(request).execute();</div><div class="line">            <span class="keyword">int</span> status = response.code();</div><div class="line">            <span class="keyword">if</span> (status == <span class="number">200</span>) &#123;</div><div class="line">                <span class="keyword">return</span> response.body().string();</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            logger.error(<span class="string">"okhttp postFile error &gt;&gt; ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (response != <span class="keyword">null</span>) &#123;</div><div class="line">                response.close();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> responseBody;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Resource</span></div><div class="line"><span class="keyword">private</span> OkHttpUtil okHttpUtil;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;okhttp 介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HTTP is the way modern applications network. It’s how we exchange data &amp;amp; media. &amp;gt;Doing HTTP efficiently makes your stuff load faster and saves bandwidth.&lt;/p&gt;
&lt;p&gt;OkHttp is an HTTP client that’s efficient by default:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP/2 support allows all requests to the same host to share a socket.&lt;/li&gt;
&lt;li&gt;Connection pooling reduces request latency (if HTTP/2 isn’t available).&lt;/li&gt;
&lt;li&gt;Transparent GZIP shrinks download sizes.&lt;/li&gt;
&lt;li&gt;Response caching avoids the network completely for repeat requests.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;OkHttp perseveres when the network is troublesome: it will silently recover from &amp;gt; &amp;gt;common connection problems. If your service has multiple IP addresses OkHttp will &amp;gt;attempt alternate addresses if the first connect fails. This is necessary for IPv4+IPv6 &amp;gt;and for services hosted in redundant data centers. OkHttp initiates new connections &amp;gt;with modern TLS features (SNI, ALPN), and falls back to TLS 1.0 if the handshake fails.&lt;/p&gt;
&lt;p&gt;Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It supports both synchronous blocking calls and async calls with callbacks.&lt;/p&gt;
&lt;p&gt;OkHttp supports Android 2.3 and above. For Java, the minimum requirement is 1.7.    —摘自 &lt;a href=&quot;https://square.github.io/okhttp/&quot;&gt;https://square.github.io/okhttp/&lt;/a&gt; &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="https://miaoxinwei.github.io/categories/JAVA/"/>
    
    
      <category term="Spring" scheme="https://miaoxinwei.github.io/tags/Spring/"/>
    
      <category term="okhttp3" scheme="https://miaoxinwei.github.io/tags/okhttp3/"/>
    
  </entry>
  
  <entry>
    <title>spring 集成 websocket</title>
    <link href="https://miaoxinwei.github.io/2017/04/21/spring-%E9%9B%86%E6%88%90-websocket/"/>
    <id>https://miaoxinwei.github.io/2017/04/21/spring-集成-websocket/</id>
    <published>2017-04-21T03:26:18.000Z</published>
    <updated>2017-04-25T06:40:57.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>spring4.0以后加入了对websocket技术的支持，目前项目用的是SSM（springMVC+spring+MyBatis）框架，所以选择了spring自带的websocket。</strong></p>
</blockquote>
<a id="more"></a>
<h4 id="开始集成"><a href="#开始集成" class="headerlink" title="开始集成:"></a>开始集成:</h4><h4 id="在pom-xml文件中增加以下依赖"><a href="#在pom-xml文件中增加以下依赖" class="headerlink" title="在pom.xml文件中增加以下依赖"></a>在pom.xml文件中增加以下依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-messaging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.7.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.websocket<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.websocket-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></div><div class="line">	<span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="握手拦截器"><a href="#握手拦截器" class="headerlink" title="握手拦截器"></a>握手拦截器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketHandshakeInterceptor</span> <span class="keyword">extends</span> <span class="title">HttpSessionHandshakeInterceptor</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">beforeHandshake</span><span class="params">(ServerHttpRequest request, ServerHttpResponse response,</span></span></div><div class="line">                                   WebSocketHandler wsHandler, Map&lt;String, Object&gt; attributes) <span class="keyword">throws</span> Exception &#123;</div><div class="line">        <span class="keyword">if</span> (request <span class="keyword">instanceof</span> ServletServerHttpRequest) &#123;</div><div class="line">            String openid = ((ServletServerHttpRequest) request).getServletRequest().getParameter(<span class="string">"openid"</span>);</div><div class="line"></div><div class="line">            attributes.put(<span class="string">"WEBSOCKET_USERNAME"</span>, openid);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.beforeHandshake(request, response, wsHandler, attributes);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterHandshake</span><span class="params">(ServerHttpRequest request, ServerHttpResponse response,</span></span></div><div class="line">                               WebSocketHandler wsHandler, Exception ex) &#123;</div><div class="line">        <span class="keyword">super</span>.afterHandshake(request, response, wsHandler, ex);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="业务拦截器"><a href="#业务拦截器" class="headerlink" title="业务拦截器"></a>业务拦截器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UnionpaySocketHandler</span> <span class="keyword">extends</span> <span class="title">TextWebSocketHandler</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(UnionpaySocketHandler.class);</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> ConcurrentMap&lt;String, WebSocketSession&gt; sessions;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        sessions = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//接收文本消息，并发送出去</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">handleTextMessage</span><span class="params">(WebSocketSession session, TextMessage message)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        String msg = message.getPayload();</div><div class="line"></div><div class="line">        TextMessage returnMessage = <span class="keyword">new</span> TextMessage(msg);</div><div class="line">        session.sendMessage(returnMessage);</div><div class="line"></div><div class="line">        <span class="keyword">super</span>.handleTextMessage(session, message);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//连接建立后处理</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterConnectionEstablished</span><span class="params">(WebSocketSession session)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        String openid = (String) session.getAttributes().get(<span class="string">"WEBSOCKET_USERNAME"</span>);</div><div class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(openid)) &#123;</div><div class="line">            logger.info(<span class="string">"用户 &gt;&gt; &#123;&#125; 建立连接"</span>, openid);</div><div class="line"></div><div class="line">            sessions.put(openid, session);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//抛出异常时处理</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleTransportError</span><span class="params">(WebSocketSession session, Throwable exception)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">if</span> (session.isOpen()) &#123;</div><div class="line">            session.close();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        String openid = (String) session.getAttributes().get(<span class="string">"WEBSOCKET_USERNAME"</span>);</div><div class="line"></div><div class="line">        sessions.remove(openid);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//连接关闭后处理</span></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterConnectionClosed</span><span class="params">(WebSocketSession session, CloseStatus closeStatus)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line"></div><div class="line">        String openid = (String) session.getAttributes().get(<span class="string">"WEBSOCKET_USERNAME"</span>);</div><div class="line"></div><div class="line">        logger.info(<span class="string">"用户 &gt;&gt; &#123;&#125; 退出连接"</span>, openid);</div><div class="line"></div><div class="line">        sessions.remove(openid);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 给某个用户发送消息</div><div class="line">     *</div><div class="line">     * <span class="doctag">@param</span> userName</div><div class="line">     * <span class="doctag">@param</span> msg</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendMessageToUser</span><span class="params">(String userName, String msg)</span> </span>&#123;</div><div class="line">        WebSocketSession session = sessions.get(userName);</div><div class="line">        <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                TextMessage message = <span class="keyword">new</span> TextMessage(msg);</div><div class="line"></div><div class="line">                session.sendMessage(message);</div><div class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                logger.error(<span class="string">"发送信息异常, ex = &#123;&#125;"</span>, ExceptionUtils.getStackTrace(e));</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="配置类"><a href="#配置类" class="headerlink" title="配置类"></a>配置类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Configuration</span></div><div class="line"><span class="meta">@EnableWebSocket</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSocketConfiguration</span> <span class="keyword">implements</span> <span class="title">WebSocketConfigurer</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerWebSocketHandlers</span><span class="params">(WebSocketHandlerRegistry registry)</span> </span>&#123;</div><div class="line">        registry</div><div class="line">                .addHandler(unionpaySocketHandler(), <span class="string">"/unionpayServer"</span>)</div><div class="line">                .setAllowedOrigins(<span class="string">"*"</span>)<span class="comment">//允许所有域访问</span></div><div class="line">                .addInterceptors(myInterceptor());</div><div class="line">        registry</div><div class="line">                .addHandler(unionpaySocketHandler(), <span class="string">"/unionpayServer/sockjs"</span>)</div><div class="line">                .setAllowedOrigins(<span class="string">"*"</span>)</div><div class="line">                .addInterceptors(myInterceptor())</div><div class="line">                .withSockJS();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> UnionpaySocketHandler <span class="title">unionpaySocketHandler</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UnionpaySocketHandler();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Bean</span></div><div class="line">    <span class="function"><span class="keyword">public</span> WebSocketHandshakeInterceptor <span class="title">myInterceptor</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> WebSocketHandshakeInterceptor();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="web-xml增加配置"><a href="#web-xml增加配置" class="headerlink" title="web.xml增加配置"></a>web.xml增加配置</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springDispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring/spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></div><div class="line">  **<span class="tag">&lt;<span class="name">async-supported</span>&gt;</span>true<span class="tag">&lt;/<span class="name">async-supported</span>&gt;</span>//需要增加此项  允许异步(未测试是否必须配置)</div><div class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="以下重点"><a href="#以下重点" class="headerlink" title="以下重点"></a>以下重点</h4><p>如果使用了nginx做代理，则nginx需要增加配置，否则websocket开启会报错301或者400或者500等</p>
<ul>
<li>以下为例子</li>
</ul>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">location /websocket &#123;</div><div class="line">		proxy_pass   http://127.0.0.1:9090/unionpayServer;</div><div class="line">		proxy_http_version 1.1;</div><div class="line">		proxy_set_header Upgrade $http_upgrade;</div><div class="line">		proxy_set_header Connection "upgrade";</div><div class="line">		proxy_read_timeout 300s;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="前端调用方法示例"><a href="#前端调用方法示例" class="headerlink" title="前端调用方法示例"></a>前端调用方法示例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">websocket = <span class="keyword">new</span> WebSocket(<span class="string">"ws://localhost:8080/websocket?openid=123"</span>);<span class="comment">//如果为https,ws改为wss</span></div></pre></td></tr></table></figure>
<h4 id="至此，整个websocket集成配置已完成。"><a href="#至此，整个websocket集成配置已完成。" class="headerlink" title="至此，整个websocket集成配置已完成。"></a>至此，整个websocket集成配置已完成。</h4>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;spring4.0以后加入了对websocket技术的支持，目前项目用的是SSM（springMVC+spring+MyBatis）框架，所以选择了spring自带的websocket。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="JAVA" scheme="https://miaoxinwei.github.io/categories/JAVA/"/>
    
    
      <category term="Spring" scheme="https://miaoxinwei.github.io/tags/Spring/"/>
    
      <category term="websocket" scheme="https://miaoxinwei.github.io/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://miaoxinwei.github.io/2017/04/20/hello%20world/"/>
    <id>https://miaoxinwei.github.io/2017/04/20/hello world/</id>
    <published>2017-04-20T07:13:16.000Z</published>
    <updated>2017-04-21T14:37:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, this world！</p>
<a id="more"></a>
<p>没有啦~~~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hello, this world！&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="https://miaoxinwei.github.io/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="闲谈" scheme="https://miaoxinwei.github.io/tags/%E9%97%B2%E8%B0%88/"/>
    
  </entry>
  
</feed>
